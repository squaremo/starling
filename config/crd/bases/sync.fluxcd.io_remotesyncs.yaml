
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: remotesyncs.sync.fluxcd.io
spec:
  group: sync.fluxcd.io
  names:
    kind: RemoteSync
    listKind: RemoteSyncList
    plural: remotesyncs
    singular: remotesync
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: RemoteSync is the Schema for the remotesyncs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RemoteSyncSpec defines the desired state of RemoteSync
          properties:
            clusterRef:
              description: ClusterRef is a reference to the cluster to apply definitions
                to
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            dependencies:
              description: Dependencies gives a list of the dependency relations this
                sync has. These must be satisfied for this sync to be applied.
              items:
                properties:
                  requiredStatus:
                    description: RequiredStatus is the status needed to be reported
                      by the dependency before this sync can proceed.
                    type: string
                  sync:
                    description: SyncRef is a pointer to another sync of the same
                      kind.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                required:
                - requiredStatus
                - sync
                type: object
              type: array
            interval:
              description: Interval is the target period for reapplying the config
                to the cluster. Syncs may be processed slower than this, depending
                on load; or may occur more often if the sync in question is updated.
              type: string
            source:
              description: Source is the location from which to get configuration
                to sync.
              properties:
                paths:
                  description: Paths gives the paths to include in the sync. If using
                    a kustomization, there should be only one, ending in 'kustomization.yaml'.
                    If missing, the root directory will be used.
                  items:
                    type: string
                  type: array
                revision:
                  description: Revision identifies the commit from which the URL is
                    generated. This accompanies the URL so that it can be explicitly
                    recorded in the status.
                  type: string
                url:
                  description: URL is a url for downloading a zipfile or tarball of
                    the package to sync
                  type: string
              required:
              - url
              type: object
          required:
          - interval
          - source
          type: object
        status:
          description: RemoteSyncStatus defines the observed state of RemoteSync
          properties:
            lastApplyResult:
              description: LastApplyResult records the outcome of the last sync attempt
              type: string
            lastApplySource:
              description: LastApplySource records the source that was set last time
                a sync was attempted.
              properties:
                paths:
                  description: Paths gives the paths to include in the sync. If using
                    a kustomization, there should be only one, ending in 'kustomization.yaml'.
                    If missing, the root directory will be used.
                  items:
                    type: string
                  type: array
                revision:
                  description: Revision identifies the commit from which the URL is
                    generated. This accompanies the URL so that it can be explicitly
                    recorded in the status.
                  type: string
                url:
                  description: URL is a url for downloading a zipfile or tarball of
                    the package to sync
                  type: string
              required:
              - url
              type: object
            lastApplyTime:
              description: LastAppliedTime records the last time a sync was attempted
              format: date-time
              type: string
            lastResourceStatusTime:
              description: LastStatusTime records the last time the applied resources
                were successfully scanned for their status.
              format: date-time
              type: string
            observedGeneration:
              description: ObservedGeneration (from metadata.generation) is the generation
                last observed by the controller. This is used so the controller can
                know whether it needs to react to a change, or simply update the status.
              format: int64
              type: integer
            pendingDependencies:
              description: PendingDependencies is a list of dependencies that are
                not yet satisfied. Aside from being informative this lets the controller
                see if there is a cycle.
              items:
                properties:
                  requiredStatus:
                    description: RequiredStatus is the status needed to be reported
                      by the dependency before this sync can proceed.
                    type: string
                  sync:
                    description: SyncRef is a pointer to another sync of the same
                      kind.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                required:
                - requiredStatus
                - sync
                type: object
              type: array
            resources:
              description: Resources gives the identity and summary status of each
                resource applied by this sync.
              items:
                description: ResourceStatus gives the identity and summary status
                  of a resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                  status:
                    description: Status defines the set of statuses a resource can
                      have.
                    type: string
                required:
                - name
                type: object
              type: array
            resourcesLeastStatus:
              description: ResourcesLeastStatus gives an aggreate status for the resources
                synced, by using the _least_ ready of the individual statuses.
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
