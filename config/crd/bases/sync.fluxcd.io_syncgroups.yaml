
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: syncgroups.sync.fluxcd.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.observedSource.revision
    name: Revision
    type: string
  - JSONPath: .status.summary.updated
    name: Updated
    type: string
  - JSONPath: .status.summary.success
    name: Succeeded
    type: string
  - JSONPath: .status.summary.fail
    name: Failed
    type: string
  group: sync.fluxcd.io
  names:
    kind: SyncGroup
    listKind: SyncGroupList
    plural: syncgroups
    singular: syncgroup
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: SyncGroup is the Schema for the syncgroups API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SyncGroupSpec defines a group of clusters to be synced with
            the sync specification provided
          properties:
            interval:
              description: Interval is the perion on which syncs should be run.
              type: string
            selector:
              description: Selector gives the set of clusters to which to sync the
                given source, as a label selector. If missing, a Sync will be created
                for the local cluster. If _empty_, all clusters are selected.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            source:
              description: Source gives the source of the package to sync.
              properties:
                gitRepository:
                  description: GitRepository follows a git repository source by taking
                    the URL
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                paths:
                  description: Paths gives the paths within the package to sync. An
                    empty value means sync the root directory.
                  items:
                    type: string
                  type: array
                url:
                  description: URL syncs clusters to the gzipped tarball or zip archive
                    at the given URL
                  type: string
              type: object
          required:
          - interval
          - source
          type: object
        status:
          description: SyncGroupStatus defines the observed state of SyncGroup
          properties:
            observedSource:
              description: ObservedSource gives the configuraton source, as last seen
                by the controller. NB this is a SyncSource, since it encodes the actual
                revision etc. that will be rolled out to Sync objects.
              properties:
                paths:
                  description: Paths gives the paths to include in the sync. If using
                    a kustomization, there should be only one, ending in 'kustomization.yaml'.
                    If missing, the root directory will be used.
                  items:
                    type: string
                  type: array
                revision:
                  description: Revision identifies the commit from which the URL is
                    generated. This accompanies the URL so that it can be explicitly
                    recorded in the status.
                  type: string
                url:
                  description: URL is a url for downloading a zipfile or tarball of
                    the package to sync
                  type: string
              required:
              - url
              type: object
            summary:
              description: Summary gives the counts of Syncs in various states
              properties:
                fail:
                  description: Fail gives the number of Syncs that have completed
                    and failed
                  type: integer
                success:
                  description: Success gives the number of Syncs that have complete
                    and succeeded
                  type: integer
                syncTotal:
                  description: Total gives the total number of Syncs owned by this
                    SyncGroup
                  type: integer
                updated:
                  description: Updated gives the number of Syncs that have been updated
                    since last syncing
                  type: integer
              required:
              - fail
              - success
              - syncTotal
              - updated
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
